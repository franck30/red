machine:
  java:
    version: oraclejdk8
  environment:
    GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2048m -XX:+HeapDumpOnOutOfMemoryError"'
    SERVICE_ACCOUNT: 'service-account.json'
    PACKAGE_NAME: 'com.benoitquenaudon.tvfoot.red'

dependencies:
  cache_directories:
    - "/opt/circleci/.rvm/gems"
  pre:
    - mkdir -p ${ANDROID_HOME}/licenses
    - echo $ANDROID_SDK_LICENSE > ${ANDROID_HOME}/licenses/android-sdk-license
    - echo y | android update sdk --no-ui --all --filter "extra-google-google_play_services,extra-google-m2repository,extra-android-m2repository"
    - bash ./misc/download_keystore.sh
    - bash ./misc/download_google-services.sh
    - bash ./misc/download_service-account.sh
  override:
    - ./gradlew dependencies
    - gem install fastlane

test:
  pre:
    #    - emulator -avd circleci-android22 -no-audio -no-window:
    #        background: true
    #        parallel: true
    #    - circle-android wait-for-boot
    #    - sleep 30
    #    # Unlock the screen
    #    - adb shell input keyevent 82
  override:
    - ./gradlew clean assemble -Dpre-dex=false --console=plain --stacktrace
    - ./gradlew test --console=plain
    - ./gradlew pmd --console=plain
    - ./gradlew findbugs --console=plain
    #    - ./gradlew connectedAndroidTest --console=plain
    - ./gradlew lint --console=plain
  post:
    - cp -r app/build/outputs $CIRCLE_ARTIFACTS
    - mkdir -p $CIRCLE_TEST_REPORTS/junit/
    - find app/build/test-results/ -name \*.xml -exec cp {} $CIRCLE_TEST_REPORTS/junit/ \;
    #    - find app/build/outputs/androidTest-results/ -name \*.xml -exec cp {} $CIRCLE_TEST_REPORTS/junit/ \;
    - find app/build/reports/ -name \*.xml -exec cp {} $CIRCLE_TEST_REPORTS/junit/ \;

    # screenshot debugging
    #- wget http://imgur.com/tools/imgurbash.sh
    #- chmod a+x imgurbash.sh
    #- adb shell screencap -p | sed 's/\r$//' > bootscreen.png
    #- ./imgurbash.sh bootscreen.png

# Wait till the suspension thing is dealt with...
#deployment:
#  alpha:
#    branch: develop
#    commands:
#      - echo "deploying on track alpha"
#      - fastlane supply run --json_key "$SERVICE_ACCOUNT" --package_name "$PACKAGE_NAME" --apk ./app/build/outputs/apk/app-prod-release.apk --track alpha